/*
 * This file is generated by jOOQ.
 */
package com.cycastic.library_management.generated;


import com.cycastic.library_management.generated.tables.Authors;
import com.cycastic.library_management.generated.tables.BatchDetails;
import com.cycastic.library_management.generated.tables.BookAuthors;
import com.cycastic.library_management.generated.tables.BookLocations;
import com.cycastic.library_management.generated.tables.Books;
import com.cycastic.library_management.generated.tables.BorrowedBooks;
import com.cycastic.library_management.generated.tables.Employees;
import com.cycastic.library_management.generated.tables.Members;
import com.cycastic.library_management.generated.tables.Publisher;
import com.cycastic.library_management.generated.tables.PurchaseBatches;
import com.cycastic.library_management.generated.tables.Shelves;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LibraryManagement extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>library_management</code>
     */
    public static final LibraryManagement LIBRARY_MANAGEMENT = new LibraryManagement();

    /**
     * The table <code>library_management.authors</code>.
     */
    public final Authors AUTHORS = Authors.AUTHORS;

    /**
     * The table <code>library_management.batch_details</code>.
     */
    public final BatchDetails BATCH_DETAILS = BatchDetails.BATCH_DETAILS;

    /**
     * The table <code>library_management.book_authors</code>.
     */
    public final BookAuthors BOOK_AUTHORS = BookAuthors.BOOK_AUTHORS;

    /**
     * The table <code>library_management.book_locations</code>.
     */
    public final BookLocations BOOK_LOCATIONS = BookLocations.BOOK_LOCATIONS;

    /**
     * The table <code>library_management.books</code>.
     */
    public final Books BOOKS = Books.BOOKS;

    /**
     * The table <code>library_management.borrowed_books</code>.
     */
    public final BorrowedBooks BORROWED_BOOKS = BorrowedBooks.BORROWED_BOOKS;

    /**
     * The table <code>library_management.employees</code>.
     */
    public final Employees EMPLOYEES = Employees.EMPLOYEES;

    /**
     * The table <code>library_management.members</code>.
     */
    public final Members MEMBERS = Members.MEMBERS;

    /**
     * The table <code>library_management.publisher</code>.
     */
    public final Publisher PUBLISHER = Publisher.PUBLISHER;

    /**
     * The table <code>library_management.purchase_batches</code>.
     */
    public final PurchaseBatches PURCHASE_BATCHES = PurchaseBatches.PURCHASE_BATCHES;

    /**
     * The table <code>library_management.shelves</code>.
     */
    public final Shelves SHELVES = Shelves.SHELVES;

    /**
     * No further instances allowed
     */
    private LibraryManagement() {
        super("library_management", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Authors.AUTHORS,
            BatchDetails.BATCH_DETAILS,
            BookAuthors.BOOK_AUTHORS,
            BookLocations.BOOK_LOCATIONS,
            Books.BOOKS,
            BorrowedBooks.BORROWED_BOOKS,
            Employees.EMPLOYEES,
            Members.MEMBERS,
            Publisher.PUBLISHER,
            PurchaseBatches.PURCHASE_BATCHES,
            Shelves.SHELVES
        );
    }
}
