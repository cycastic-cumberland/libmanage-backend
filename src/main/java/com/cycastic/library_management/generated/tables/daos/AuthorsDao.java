/*
 * This file is generated by jOOQ.
 */
package com.cycastic.library_management.generated.tables.daos;


import com.cycastic.library_management.generated.tables.Authors;
import com.cycastic.library_management.generated.tables.records.AuthorsRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorsDao extends DAOImpl<AuthorsRecord, com.cycastic.library_management.generated.tables.pojos.Authors, ULong> {

    /**
     * Create a new AuthorsDao without any configuration
     */
    public AuthorsDao() {
        super(Authors.AUTHORS, com.cycastic.library_management.generated.tables.pojos.Authors.class);
    }

    /**
     * Create a new AuthorsDao with an attached configuration
     */
    public AuthorsDao(Configuration configuration) {
        super(Authors.AUTHORS, com.cycastic.library_management.generated.tables.pojos.Authors.class, configuration);
    }

    @Override
    public ULong getId(com.cycastic.library_management.generated.tables.pojos.Authors object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Authors> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Authors.AUTHORS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Authors> fetchById(ULong... values) {
        return fetch(Authors.AUTHORS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.cycastic.library_management.generated.tables.pojos.Authors fetchOneById(ULong value) {
        return fetchOne(Authors.AUTHORS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.cycastic.library_management.generated.tables.pojos.Authors> fetchOptionalById(ULong value) {
        return fetchOptional(Authors.AUTHORS.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Authors> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Authors.AUTHORS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Authors> fetchByName(String... values) {
        return fetch(Authors.AUTHORS.NAME, values);
    }
}
