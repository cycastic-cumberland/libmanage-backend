/*
 * This file is generated by jOOQ.
 */
package com.cycastic.library_management.generated.tables.daos;


import com.cycastic.library_management.generated.tables.BookLocations;
import com.cycastic.library_management.generated.tables.records.BookLocationsRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookLocationsDao extends DAOImpl<BookLocationsRecord, com.cycastic.library_management.generated.tables.pojos.BookLocations, ULong> {

    /**
     * Create a new BookLocationsDao without any configuration
     */
    public BookLocationsDao() {
        super(BookLocations.BOOK_LOCATIONS, com.cycastic.library_management.generated.tables.pojos.BookLocations.class);
    }

    /**
     * Create a new BookLocationsDao with an attached configuration
     */
    public BookLocationsDao(Configuration configuration) {
        super(BookLocations.BOOK_LOCATIONS, com.cycastic.library_management.generated.tables.pojos.BookLocations.class, configuration);
    }

    @Override
    public ULong getId(com.cycastic.library_management.generated.tables.pojos.BookLocations object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BookLocations> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(BookLocations.BOOK_LOCATIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BookLocations> fetchById(ULong... values) {
        return fetch(BookLocations.BOOK_LOCATIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.cycastic.library_management.generated.tables.pojos.BookLocations fetchOneById(ULong value) {
        return fetchOne(BookLocations.BOOK_LOCATIONS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.cycastic.library_management.generated.tables.pojos.BookLocations> fetchOptionalById(ULong value) {
        return fetchOptional(BookLocations.BOOK_LOCATIONS.ID, value);
    }

    /**
     * Fetch records that have <code>book_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BookLocations> fetchRangeOfBookId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(BookLocations.BOOK_LOCATIONS.BOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BookLocations> fetchByBookId(ULong... values) {
        return fetch(BookLocations.BOOK_LOCATIONS.BOOK_ID, values);
    }

    /**
     * Fetch records that have <code>shelf_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BookLocations> fetchRangeOfShelfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(BookLocations.BOOK_LOCATIONS.SHELF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>shelf_id IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BookLocations> fetchByShelfId(String... values) {
        return fetch(BookLocations.BOOK_LOCATIONS.SHELF_ID, values);
    }
}
