/*
 * This file is generated by jOOQ.
 */
package com.cycastic.library_management.generated.tables.records;


import com.cycastic.library_management.generated.tables.BookAuthors;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookAuthorsRecord extends UpdatableRecordImpl<BookAuthorsRecord> implements Record2<ULong, ULong> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>library_management.book_authors.book_id</code>.
     */
    public void setBookId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>library_management.book_authors.book_id</code>.
     */
    public ULong getBookId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>library_management.book_authors.author_id</code>.
     */
    public void setAuthorId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>library_management.book_authors.author_id</code>.
     */
    public ULong getAuthorId() {
        return (ULong) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<ULong, ULong> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<ULong, ULong> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<ULong, ULong> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return BookAuthors.BOOK_AUTHORS.BOOK_ID;
    }

    @Override
    public Field<ULong> field2() {
        return BookAuthors.BOOK_AUTHORS.AUTHOR_ID;
    }

    @Override
    public ULong component1() {
        return getBookId();
    }

    @Override
    public ULong component2() {
        return getAuthorId();
    }

    @Override
    public ULong value1() {
        return getBookId();
    }

    @Override
    public ULong value2() {
        return getAuthorId();
    }

    @Override
    public BookAuthorsRecord value1(ULong value) {
        setBookId(value);
        return this;
    }

    @Override
    public BookAuthorsRecord value2(ULong value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public BookAuthorsRecord values(ULong value1, ULong value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookAuthorsRecord
     */
    public BookAuthorsRecord() {
        super(BookAuthors.BOOK_AUTHORS);
    }

    /**
     * Create a detached, initialised BookAuthorsRecord
     */
    public BookAuthorsRecord(ULong bookId, ULong authorId) {
        super(BookAuthors.BOOK_AUTHORS);

        setBookId(bookId);
        setAuthorId(authorId);
    }

    /**
     * Create a detached, initialised BookAuthorsRecord
     */
    public BookAuthorsRecord(com.cycastic.library_management.generated.tables.pojos.BookAuthors value) {
        super(BookAuthors.BOOK_AUTHORS);

        if (value != null) {
            setBookId(value.getBookId());
            setAuthorId(value.getAuthorId());
        }
    }
}
