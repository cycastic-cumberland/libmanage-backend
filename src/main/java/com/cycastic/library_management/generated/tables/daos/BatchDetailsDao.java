/*
 * This file is generated by jOOQ.
 */
package com.cycastic.library_management.generated.tables.daos;


import com.cycastic.library_management.generated.tables.BatchDetails;
import com.cycastic.library_management.generated.tables.records.BatchDetailsRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchDetailsDao extends DAOImpl<BatchDetailsRecord, com.cycastic.library_management.generated.tables.pojos.BatchDetails, Record2<ULong, ULong>> {

    /**
     * Create a new BatchDetailsDao without any configuration
     */
    public BatchDetailsDao() {
        super(BatchDetails.BATCH_DETAILS, com.cycastic.library_management.generated.tables.pojos.BatchDetails.class);
    }

    /**
     * Create a new BatchDetailsDao with an attached configuration
     */
    public BatchDetailsDao(Configuration configuration) {
        super(BatchDetails.BATCH_DETAILS, com.cycastic.library_management.generated.tables.pojos.BatchDetails.class, configuration);
    }

    @Override
    public Record2<ULong, ULong> getId(com.cycastic.library_management.generated.tables.pojos.BatchDetails object) {
        return compositeKeyRecord(object.getBookId(), object.getBatchId());
    }

    /**
     * Fetch records that have <code>batch_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BatchDetails> fetchRangeOfBatchId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(BatchDetails.BATCH_DETAILS.BATCH_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>batch_id IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BatchDetails> fetchByBatchId(ULong... values) {
        return fetch(BatchDetails.BATCH_DETAILS.BATCH_ID, values);
    }

    /**
     * Fetch records that have <code>book_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BatchDetails> fetchRangeOfBookId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(BatchDetails.BATCH_DETAILS.BOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BatchDetails> fetchByBookId(ULong... values) {
        return fetch(BatchDetails.BATCH_DETAILS.BOOK_ID, values);
    }

    /**
     * Fetch records that have <code>amount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BatchDetails> fetchRangeOfAmount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BatchDetails.BATCH_DETAILS.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.BatchDetails> fetchByAmount(Integer... values) {
        return fetch(BatchDetails.BATCH_DETAILS.AMOUNT, values);
    }
}
