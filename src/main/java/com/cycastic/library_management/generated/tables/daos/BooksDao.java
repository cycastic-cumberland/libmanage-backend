/*
 * This file is generated by jOOQ.
 */
package com.cycastic.library_management.generated.tables.daos;


import com.cycastic.library_management.generated.tables.Books;
import com.cycastic.library_management.generated.tables.records.BooksRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BooksDao extends DAOImpl<BooksRecord, com.cycastic.library_management.generated.tables.pojos.Books, ULong> {

    /**
     * Create a new BooksDao without any configuration
     */
    public BooksDao() {
        super(Books.BOOKS, com.cycastic.library_management.generated.tables.pojos.Books.class);
    }

    /**
     * Create a new BooksDao with an attached configuration
     */
    public BooksDao(Configuration configuration) {
        super(Books.BOOKS, com.cycastic.library_management.generated.tables.pojos.Books.class, configuration);
    }

    @Override
    public ULong getId(com.cycastic.library_management.generated.tables.pojos.Books object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Books.BOOKS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchById(ULong... values) {
        return fetch(Books.BOOKS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.cycastic.library_management.generated.tables.pojos.Books fetchOneById(ULong value) {
        return fetchOne(Books.BOOKS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.cycastic.library_management.generated.tables.pojos.Books> fetchOptionalById(ULong value) {
        return fetchOptional(Books.BOOKS.ID, value);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Books.BOOKS.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchByTitle(String... values) {
        return fetch(Books.BOOKS.TITLE, values);
    }

    /**
     * Fetch records that have <code>isbn BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchRangeOfIsbn(String lowerInclusive, String upperInclusive) {
        return fetchRange(Books.BOOKS.ISBN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>isbn IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchByIsbn(String... values) {
        return fetch(Books.BOOKS.ISBN, values);
    }

    /**
     * Fetch records that have <code>published_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchRangeOfPublishedDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Books.BOOKS.PUBLISHED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>published_date IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchByPublishedDate(LocalDateTime... values) {
        return fetch(Books.BOOKS.PUBLISHED_DATE, values);
    }

    /**
     * Fetch records that have <code>in_storage BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchRangeOfInStorage(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Books.BOOKS.IN_STORAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>in_storage IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchByInStorage(Integer... values) {
        return fetch(Books.BOOKS.IN_STORAGE, values);
    }

    /**
     * Fetch records that have <code>capsule_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchRangeOfCapsuleUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Books.BOOKS.CAPSULE_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>capsule_url IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Books> fetchByCapsuleUrl(String... values) {
        return fetch(Books.BOOKS.CAPSULE_URL, values);
    }
}
