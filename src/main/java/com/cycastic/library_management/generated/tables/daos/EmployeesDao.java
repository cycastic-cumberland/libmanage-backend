/*
 * This file is generated by jOOQ.
 */
package com.cycastic.library_management.generated.tables.daos;


import com.cycastic.library_management.generated.tables.Employees;
import com.cycastic.library_management.generated.tables.records.EmployeesRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeesDao extends DAOImpl<EmployeesRecord, com.cycastic.library_management.generated.tables.pojos.Employees, String> {

    /**
     * Create a new EmployeesDao without any configuration
     */
    public EmployeesDao() {
        super(Employees.EMPLOYEES, com.cycastic.library_management.generated.tables.pojos.Employees.class);
    }

    /**
     * Create a new EmployeesDao with an attached configuration
     */
    public EmployeesDao(Configuration configuration) {
        super(Employees.EMPLOYEES, com.cycastic.library_management.generated.tables.pojos.Employees.class, configuration);
    }

    @Override
    public String getId(com.cycastic.library_management.generated.tables.pojos.Employees object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Employees> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Employees.EMPLOYEES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Employees> fetchById(String... values) {
        return fetch(Employees.EMPLOYEES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.cycastic.library_management.generated.tables.pojos.Employees fetchOneById(String value) {
        return fetchOne(Employees.EMPLOYEES.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.cycastic.library_management.generated.tables.pojos.Employees> fetchOptionalById(String value) {
        return fetchOptional(Employees.EMPLOYEES.ID, value);
    }

    /**
     * Fetch records that have <code>full_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Employees> fetchRangeOfFullName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Employees.EMPLOYEES.FULL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>full_name IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Employees> fetchByFullName(String... values) {
        return fetch(Employees.EMPLOYEES.FULL_NAME, values);
    }

    /**
     * Fetch records that have <code>hashed_password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Employees> fetchRangeOfHashedPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(Employees.EMPLOYEES.HASHED_PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hashed_password IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Employees> fetchByHashedPassword(String... values) {
        return fetch(Employees.EMPLOYEES.HASHED_PASSWORD, values);
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Employees> fetchRangeOfRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(Employees.EMPLOYEES.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Employees> fetchByRole(String... values) {
        return fetch(Employees.EMPLOYEES.ROLE, values);
    }
}
