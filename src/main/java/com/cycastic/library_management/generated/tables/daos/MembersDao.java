/*
 * This file is generated by jOOQ.
 */
package com.cycastic.library_management.generated.tables.daos;


import com.cycastic.library_management.generated.tables.Members;
import com.cycastic.library_management.generated.tables.records.MembersRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MembersDao extends DAOImpl<MembersRecord, com.cycastic.library_management.generated.tables.pojos.Members, String> {

    /**
     * Create a new MembersDao without any configuration
     */
    public MembersDao() {
        super(Members.MEMBERS, com.cycastic.library_management.generated.tables.pojos.Members.class);
    }

    /**
     * Create a new MembersDao with an attached configuration
     */
    public MembersDao(Configuration configuration) {
        super(Members.MEMBERS, com.cycastic.library_management.generated.tables.pojos.Members.class, configuration);
    }

    @Override
    public String getId(com.cycastic.library_management.generated.tables.pojos.Members object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Members> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Members.MEMBERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Members> fetchById(String... values) {
        return fetch(Members.MEMBERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.cycastic.library_management.generated.tables.pojos.Members fetchOneById(String value) {
        return fetchOne(Members.MEMBERS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.cycastic.library_management.generated.tables.pojos.Members> fetchOptionalById(String value) {
        return fetchOptional(Members.MEMBERS.ID, value);
    }

    /**
     * Fetch records that have <code>full_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Members> fetchRangeOfFullName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Members.MEMBERS.FULL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>full_name IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Members> fetchByFullName(String... values) {
        return fetch(Members.MEMBERS.FULL_NAME, values);
    }

    /**
     * Fetch records that have <code>join_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Members> fetchRangeOfJoinDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Members.MEMBERS.JOIN_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>join_date IN (values)</code>
     */
    public List<com.cycastic.library_management.generated.tables.pojos.Members> fetchByJoinDate(LocalDateTime... values) {
        return fetch(Members.MEMBERS.JOIN_DATE, values);
    }
}
